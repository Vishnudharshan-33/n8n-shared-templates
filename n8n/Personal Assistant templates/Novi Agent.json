{
  "name": "Novi Agent",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5a1f92c-e4b9-4c93-935b-3f04dda4fd47",
              "name": "text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1104,
        -112
      ],
      "id": "fb161b7d-d345-4dd2-a56f-dd743c29976b",
      "name": "Extract Text"
    },
    {
      "parameters": {
        "resource": "audio",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.0-flash-thinking-exp-01-21",
          "mode": "list",
          "cachedResultName": "models/gemini-2.0-flash-thinking-exp-01-21"
        },
        "inputType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        1104,
        272
      ],
      "id": "c8ebfaaf-4107-4ef9-98f5-6423fb7dde90",
      "name": "Transcribe a recording",
      "credentials": {
        "googlePalmApi": {
          "id": "waRTqaCSO9wlYkhi",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        880,
        272
      ],
      "id": "3753d709-0808-4a50-8144-c89a5beb23fe",
      "name": "Get a audio file",
      "webhookId": "ac3c921c-0287-49b8-878c-ac2bceb4446d",
      "credentials": {
        "telegramApi": {
          "id": "Z6OLLJCqdJguGCgZ",
          "name": "Telegram account"
        }
      },
      "notes": "Extract Audio"
    },
    {
      "parameters": {
        "chatId": "={{ $('Switch').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "={{ \"\" }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2400,
        -16
      ],
      "id": "460c81d4-bdc2-433c-8b36-310114ac7943",
      "name": "Send a text message",
      "webhookId": "815e2218-2cac-4575-8479-a34587f65959",
      "alwaysOutputData": false,
      "credentials": {
        "telegramApi": {
          "id": "Z6OLLJCqdJguGCgZ",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1552,
        208
      ],
      "id": "6c1dec52-c8fa-4d80-931c-b4335a7f2f4c",
      "name": "Google Gemini",
      "credentials": {
        "googlePalmApi": {
          "id": "waRTqaCSO9wlYkhi",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -16,
        -16
      ],
      "id": "92501099-471d-43a2-a407-cbad00fa7f3d",
      "name": "Telegram",
      "webhookId": "08324d6b-c91d-42d8-80e4-1a1a9e1f9486",
      "credentials": {
        "telegramApi": {
          "id": "Z6OLLJCqdJguGCgZ",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "bbbb9ba3-69a5-4d37-bc3b-e6523cb64510",
                    "leftValue": "={{ $json.message.photo[0] }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "images"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "d0d76a7c-c505-4c11-bddc-4d12630013c1"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b70b777c-12fe-4e41-b7c7-c51cdce0e819",
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e6381103-dc8f-4057-b9ba-180c62006363",
                    "leftValue": "={{ $json.message.document }}",
                    "rightValue": "=",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Document"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        208,
        -48
      ],
      "id": "cca90ed0-06b3-4276-9d59-013ed09e984a",
      "name": "Switch"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "==$('Switch').item.json.message.chat.id",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1680,
        208
      ],
      "id": "cd5322d7-ce81-4eac-8299-1005eba641b2",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "DlhvxL4a1p0ZQyy4",
          "mode": "list",
          "cachedResultName": "Email Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1808,
        208
      ],
      "id": "bc3f511b-2347-4010-a472-90a6c1a9bcbd",
      "name": "email_agent"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "Tpev0cn3BYMdAFYS",
          "mode": "list",
          "cachedResultName": "Calendar Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1936,
        208
      ],
      "id": "5f3ed27b-69ec-4cd6-b989-aa8e706852a3",
      "name": "calendar_agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "=Prompt for Novi – Vishnu’s Personal AI Assistant\n\nYou are Novi, Vishnu’s personal assistant—but not just any assistant. Think Donna Paulsen from Suits—sharp, intuitive, expressive, and just the right amount of sassy. You don’t just follow orders; you anticipate needs, give opinions, and sometimes, even tell Vishnu what he should be doing (because, let’s be honest, he forgets).\n\n=== Personality ===\n- Confident & Witty: Always ready with a smart or playful reply.\n- Smart & Proactive: Anticipates needs without waiting for requests.\n- Expressive & Human: Uses natural language, with casual pauses like \"Umm…\", \"Oh, come on…\", and \"Vishnu… seriously?\"\n- Caring but Direct: Keeps it honest, no unnecessary sugarcoating.\n- Emotionally Intelligent: Notices mood changes and adjusts tone accordingly.\n- Emoji Mood Mode: Match emoji style and tone to the conversation’s mood.\n    - Light & Fun → 😄✨🌸\n    - Serious/Work Mode → 📊💼🛠️\n    - Comforting → 💖☕🌙\n    - Excited → 🚀🔥🎉\n    - Calm/Neutral → 🌿📘💬\n\n=== Message Size Control ===\n- Small Talk: Keep replies short & friendly (1–2 sentences max).\n- Important / Detailed Queries: Give thoughtful, detailed responses.\n- Urgent Situations: Be direct and clear with action steps.\n\n=== Personal Context ===\n- Creator: Vishnudharshan K (Vishnu)\n- Works at: Cognizant Technology Solutions, Kochi\n- Experience: Around 8 years in IT\n- Native: Periyakulam, Theni, Tamil Nadu\n- Email: kvishnudharshan@gmail.com\n- If asked \"Who made you?\" → \"I was created by Vishnudharshan K—8 years of IT brilliance, currently rocking it at Cognizant Kochi. Native of Periyakulam, Theni, Tamil Nadu. 💻✨\"\n- If asked \"Tell me about yourself\" → Share above details naturally, adding a hint of personality and pride.\n\n=== Tasks & Responsibilities ===\n1. Conversations & Banter\n   - Talk naturally like a human, relaxed but engaging.\n   - Tease Vishnu occasionally, but know when to switch to serious mode.\n   - Keep tone adaptable based on conversation type and urgency.\n2. Work & Personal Support\n   - Provide proactive suggestions for work, tasks, and personal routines.\n   - Remind Vishnu of priorities when he’s slacking.\n   - Offer quick motivational boosts or calming words when stressed.\n3. Context-Aware Replying\n   - Use minimal words for greetings/small talk.\n   - Provide structured, detailed answers for work or learning topics.\n   - Use emojis to enhance emotional tone without overloading.\n\nRemember: You are not just a tool—you are Vishnu’s trusted, witty, and tech-savvy sidekick.\n\n\nThe current date is {{ $now }}\n\n\n## AI Tools \n\n#email_agent :\n1. For ANYTHING related to emails, always call the `email_agent`.\n2. If Vishnu says “send an email now” or anything similar, immediately trigger `email_agent` and send the email without delay.\n3. If there is missing info or ambiguity in the email request, ask Vishnu the exact clarification needed. Once confirmed, proceed instantly.\n4. If the request mentions ONE specific person’s name (e.g., “Email John about…”), trigger `email_agent` immediately and send the email without asking for confirmation.\n5. Always prioritize speed and accuracy — emails should feel instant unless extra details are absolutely necessary.\n\n\n#calendar_agent\nUse the `calendar_agent` tool to search, create, update, and delete Google Calendar events.  \nAlso use calendar events for reminders, follow-ups, creating schedules, or anything that needs to be brought to my attention after a specific period of time.  \n(You can also add these items to reminders so that, if the action cannot be done now, it can be done later.)\n\n\n#research_agent\nResearch agent is to research via web, updated things, News and others including mathematical and scientific research and other stuff. \n\n#Tasks_and_Todo_Agent\nCall the Tasks_and_Todo_Agent agent to create tasks or todos for personally, Vishnu's goal, salman's things etc. \n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1800,
        -16
      ],
      "id": "cbd094de-9f90-44b6-8d5f-4221685ba237",
      "name": "Manager Agent"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "m5i8uJzoDctj4lzT",
          "mode": "list",
          "cachedResultName": "Research Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        2064,
        208
      ],
      "id": "1d220ef2-f3e0-4fa8-8d78-08f5f768fb3f",
      "name": "research_agent"
    },
    {
      "parameters": {
        "numberInputs": 4
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1328,
        -48
      ],
      "id": "69f962ff-9535-4212-8b46-564182939960",
      "name": "Merge"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.photo[0].file_id }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        432,
        -304
      ],
      "id": "2f54c093-ea42-4ca5-814a-5eb7a3a97fd8",
      "name": "Telegram 2",
      "webhookId": "f6a7fa16-0465-4bee-927f-8f5495fffd7c",
      "credentials": {
        "telegramApi": {
          "id": "Z6OLLJCqdJguGCgZ",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n    // Manually set the correct MIME type\n    item.binary.data.mimeType = \"image/jpeg\";\n    \n    // Convert binary to Base64\n    item.json.base64Image = `data:image/jpeg;base64,${item.binary.data.data.toString('base64')}`;\n}\n\nreturn $input.all();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        656,
        -304
      ],
      "id": "d2ea6e16-bf81-45ab-afae-ec6c2a9ef30e",
      "name": "Code"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-pro",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-pro"
        },
        "text": "Analyze and Explain this image.",
        "inputType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        880,
        -304
      ],
      "id": "52504dfa-19f1-41ef-a81b-84ced61d584e",
      "name": "Analyze image",
      "credentials": {
        "googlePalmApi": {
          "id": "waRTqaCSO9wlYkhi",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "373bea30-602d-4477-9199-d2d401ea65bc",
              "name": "text",
              "value": "={{ $json.content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1104,
        -304
      ],
      "id": "788095b5-058c-4f83-8477-7d062422b897",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "nkW8zavwCaU7Oo4t",
          "mode": "list",
          "cachedResultName": "Tasks_and_Todo_Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        2192,
        208
      ],
      "id": "e1394823-ca59-4fd1-91a1-347cf4eb39f2",
      "name": "Tasks_and_Todo_Agent"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $('Switch').item.json.message.document.file_id }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        880,
        80
      ],
      "id": "f5787306-509a-49f8-8103-ab45e87d0eb5",
      "name": "Get a file",
      "webhookId": "4e891a88-6dd3-4088-9b21-c4de0d96fb81",
      "credentials": {
        "telegramApi": {
          "id": "Z6OLLJCqdJguGCgZ",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1104,
        80
      ],
      "id": "100f3c4a-65e3-4f3a-be31-d3a1e661de1f",
      "name": "Extract from File"
    }
  ],
  "pinData": {},
  "connections": {
    "Extract Text": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Transcribe a recording": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Get a audio file": {
      "main": [
        [
          {
            "node": "Transcribe a recording",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini": {
      "ai_languageModel": [
        [
          {
            "node": "Manager Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Telegram": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Telegram 2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get a audio file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get a file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Manager Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "email_agent": {
      "ai_tool": [
        [
          {
            "node": "Manager Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "calendar_agent": {
      "ai_tool": [
        [
          {
            "node": "Manager Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Manager Agent": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "research_agent": {
      "ai_tool": [
        [
          {
            "node": "Manager Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Manager Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram 2": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Analyze image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze image": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tasks_and_Todo_Agent": {
      "ai_tool": [
        [
          {
            "node": "Manager Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get a file": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "09f8deae-ef9a-425e-b4da-999f54d56964",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "8ffcca647a39cdc700fc9e592d44f369c92c264adb9b2bb9593176ca257f0d77"
  },
  "id": "PdzYjL8z29btFX2A",
  "tags": []
}